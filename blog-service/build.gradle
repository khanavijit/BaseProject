import java.text.SimpleDateFormat



plugins {
    id("io.franzbecker.gradle-lombok") version "4.0.0"
    id("org.hidetake.swagger.generator") version "2.18.2"
    id("de.undercouch.download") version "4.1.1"
    id("io.spring.dependency-management") version "1.0.10.RELEASE"
    id("com.gorylenko.gradle-git-properties") version "2.2.3"
    id("org.sonarqube") version "3.0"
    id("com.adarshr.test-logger") version "2.1.0"
    id("com.google.cloud.tools.jib") version "2.6.0"
    id("org.springframework.boot")
    id("jacoco")
    id("java")
}

version = project.properties['version'] ?: '1.0.0-' + buildTime() + "." + (System.getenv("DRONE_BUILD_NUMBER") ?: "0")

static def buildTime() {
    def df = new SimpleDateFormat("yyyyMMddHHmm")
    return df.format(new Date())
}

repositories {
    mavenLocal()
    mavenCentral()
}




springBoot {
    buildInfo()
}

lombok { // optional: values below are the defaults
    version = "1.18.16"
}

dependencies {
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")
    implementation("org.modelmapper:modelmapper:2.3.8")
    implementation("javax.validation:validation-api:2.0.1.Final")

    implementation("org.ak.project:spring-boot-rest-service-library:1.0.0")
    implementation("org.ak.project:spring-boot-cache-library:1.0.0")
    implementation("org.ak.project:spring-boot-metrics-library:1.0.0")

    implementation("io.netty:netty-transport-native-epoll:4.1.52.Final:linux-x86_64")
    implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'
    implementation("org.cognitor.cassandra:cassandra-migration-spring-boot-starter:2.4.0_v4")

    swaggerCodegen 'io.swagger:swagger-codegen-cli:2.4.16'

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
    testImplementation("org.springframework.cloud:spring-cloud-contract-wiremock")

    testImplementation("org.testcontainers:junit-jupiter:1.14.3")
    testImplementation("org.testcontainers:cassandra:1.14.3")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    maxHeapSize = "2048m"
    failFast = true
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}
