import java.text.SimpleDateFormat

buildscript {
    ext {
        springBootVersion = '2.1.4.RELEASE'
        springCloudVersion = 'Greenwich.SR1'
    }
}

plugins {
    id 'io.franzbecker.gradle-lombok' version '2.1'
    id 'org.hidetake.swagger.generator' version '2.18.1'
    id "de.undercouch.download" version "3.4.3"
    id 'org.springframework.boot' version "2.1.4.RELEASE"
    id 'io.spring.dependency-management' version "1.0.6.RELEASE"
    id 'com.gorylenko.gradle-git-properties' version "2.0.0"
    id "org.sonarqube" version "2.7"
    id 'jacoco'
    id 'java'
    id 'eclipse'
}

static def buildTime() {
    def df = new SimpleDateFormat("yyyyMMddHHmm")
    return df.format(new Date())
}

group 'org.ak.project'
version = '1.0.0-' + buildTime() + "." + (System.getenv("BUILD_NUMBER") ?: "0")
archivesBaseName = 'blog-service'

springBoot {
    buildInfo()
}


repositories {
    mavenCentral()
    mavenLocal()
    maven {
        setUrl "http://nexus-cicd-stage.int.liquid.tdk.dk/repository/yousee-maven-releases/"
        content {
            includeGroupByRegex "dk\\.tdc.*"
        }
    }
    maven { setUrl "http://nexus-cicd-stage.int.liquid.tdk.dk/repository/maven-public/" }
}


dependencies {
    implementation platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}")

    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
    compile('org.springframework.boot:spring-boot-starter-data-cassandra')
    compile group: 'javax.persistence', name: 'persistence-api', version: '1.0'


    implementation 'dk.tdc.pdsm:spring-boot-rest-service-library:1.22'
    implementation 'dk.tdc.pdsm:spring-boot-metrics-library:1.16'
    implementation 'dk.tdc.pdsm:spring-boot-cache-library:1.17'
    implementation 'org.modelmapper:modelmapper:2.3.2'

    implementation 'io.netty:netty-transport-native-epoll:4.1.33.Final:linux-x86_64'
    implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'
    implementation 'org.cognitor.cassandra:cassandra-migration-spring-boot-starter:2.2.0'

    implementation 'commons-validator:commons-validator:1.6'
    implementation 'commons-io:commons-io:2.6'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    swaggerCodegen 'io.swagger:swagger-codegen-cli:2.4.0'

    testCompile 'org.junit.jupiter:junit-jupiter-api'
    testCompile 'org.junit.jupiter:junit-jupiter-params'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine'
    testRuntime 'org.junit.platform:junit-platform-launcher'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.springframework.cloud:spring-cloud-contract-wiremock'


    runtime('org.springframework.boot:spring-boot-devtools')
}

configurations {
    testCompile.exclude group: "junit", module: "junit"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}